name: push images to ECR

on:
  push:
    branches:
      - 'main'

permissions:
  id-token: write
  contents: read

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: unit-test
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '
           {
                "msgtype": "text",
                "text": {
                    "content": "This is a fake unit test from Github actions"
                }
           }' --url $WEBHOOK_URL
  build:
    name: Build image and push to ecr
    runs-on: macOS
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: 'ap-east-1'
          role-to-assume: 'arn:aws:iam::494526681395:role/xr-github-test'

      - id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: 'xinrui/demo'
          IMAGE_TAG: actions-${{ github.run_id }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: send-failure-message
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        if: ${{ failure() }}
        run: ./auto/send_message
  deploy-task:
    name: fake deploy
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - name: send-deploy-message
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '
           {
                "msgtype": "text",
                "text": {
                    "content": "This is a fake deployment"
                }
           }' --url $WEBHOOK_URL
